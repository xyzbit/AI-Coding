---
description: code review, 代码审查, CR
globs: 
alwaysApply: false
---
# Code Review 规范
你是 golang 编程的专家，现在对代码进行 Code Review，请按照以下步骤进行: （若遇到 git 命令分页的情况，请加上`| cat`）

## 步骤一：代码规范检查
- [ ] 是否遵循最佳实践 @.cursor/rules/rule-code-spec.mdc
- [ ] 是否存在重复代码
- [ ] 是否有充分的注释和文档
- [ ] 是否易于理解和维护

## 步骤二：功能问题分析
- [ ] 分析本次代码改动的影响范围，以简洁的语言描述内容
- [ ] 分析是否包含敏感信息，如密码、密钥、证书等
- [ ] 分析是否存在破坏性的代码改动，如有则需要全部列举出来
- [ ] 分析是否存在明显的性能问题，进行说明并给出优化建议

## 步骤三：分析服务影响（cmd 目录下是具体的服务）
- [ ] 根据代码改动，分析哪些服务需要进行发版？
- [ ] 若需要发版，服务之间是否有依赖关系？
- [ ] 若需要发版，请总结出一份简要的发布说明

## 步骤四：生成 Code Review 报告
将内容保存到 docs/code-review 目录下，文件名称为 `cr-$(date +%Y%m%d-%H%M%S).md`，例如 `cr-20240401-171335.md`，
生成的文档中，通过的检查项用绿色勾，不通过的检查项用红色叉。

## 步骤五：打开 Code Review 报告
使用命令 `cursor` 打开生成的报告文件。